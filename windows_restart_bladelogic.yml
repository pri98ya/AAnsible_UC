---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: windows

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED:  This target host {{HOSTS}} does not  exist in tower Ansible Inventory 2L22"
        failed_when: True

- name: Playbook check if host is Windows
  gather_facts: false
  hosts: "{{ HOSTS }}"
  vars:
    HOSTS:
  tasks:
    - block:
      - name: "Fail if Variable ansible_connection is not winrm "
        assert:
          that:
            - ansible_connection == "winrm"
          msg: "Playbook is for Windows not Linux"

      rescue:
      - name: Invalid OS for this playbook
        debug:
          msg: "SYNTBOT_OUTPUT: FAILED: {{ HOSTS }} is a Linux cannot run this playbook"
        failed_when: True

# restart the bladelogic service on windows host 
- name: Bladelogic service restart
  gather_facts: false
  hosts: "{{ HOSTS }}"
  tasks:
   - block:
     - name: Check service status before restart 
       win_shell:
         Get-Service RSCDsvc
       changed_when: false
       register: statebefore

     - name: Display state before restart
       debug:
         msg: "{{ statebefore.stdout_lines | to_nice_yaml }}"

     - name: Restart service RSCDsvc
       win_service:
         name: RSCDsvc
         state: restarted
       register: stateafter
     
     - name: Verify service is running after restart
       assert:
         that: stateafter.state == "running"
         msg: "{{ stateafter.name }} is {{ stateafter.state }}"

     - name: Log output when successful
       debug:
         msg:
          - "SYNTBOT_OUTPUT: SUCCESSFUL restart of bladelogic service (RSCDsvc) on {{ HOSTS }}"

     rescue:
     - name: Log output when failed
       debug:
         msg:
          - "SYNTBOT_OUTPUT: FAILED: Task {{ ansible_failed_task.name}} failed on {{ HOSTS }}"
       failed_when: True




    
